apply plugin: 'maven'
apply plugin: 'signing'

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar, dependsOn:classes) {
  classifier = 'sources'
  from sourceSets.main.allJava
}

artifacts {
  archives jar, javadocJar, sourcesJar
}

signing {
  sign configurations.archives
}

/** Publish to Sonatype */
def customizePom(pom, gradleProject) {
  pom.whenConfigured { generatedPom ->
    // add all items necessary for maven central publication
    generatedPom.project {
      name = 'Grok'
      description = 'Simple API that allows you to easily parse logs and other files'
      url = 'http://grok.nflabs.com'
      packaging 'jar'
      organization {
        name = 'Krakken'
        url = 'http://release.thekraken.io/'
      }
      licenses {
        license {
          name 'The Apache Software License, Version 2.0'
          url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          distribution 'repo'
        }
      }
      scm {
        url = 'http://github.com/thekrakken/java-grok'
        connection = 'scm:git:git@github.com:thekrakken/java-grok.git'
        developerConnection = 'scm:git:git@github.com:thekrakken/java-grok.git'
      }
      developers {
        developer {
          id = 'anthonycorbacho'
          name = 'Anthony Corbacho'
          email = 'corbacho.anthony@gmail.com'
        }
      }
    }
  }
}

repositories {
  flatDir {
    name "fileRepo"
    dirs "repo"
  }
}

uploadArchives {
  repositories {
    //add project.repositories.fileRepo
    mavenDeployer {
      //beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
      customizePom(pom, project)    
      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: sonatypeUsername, password: sonatypePassword)
      }
      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: sonatypeUsername, password: sonatypePassword)
      }
    }
  }
}

install {
  repositories.mavenInstaller {
    customizePom(pom, project)
  }
}